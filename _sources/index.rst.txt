Welcome to lback documentation!
=================================

.. image:: _static/logo.png
   :align: center
   :width: 200px

**lback** is a Python web framework designed for performance, modularity, and control. It provides a robust foundation for building web applications with features like:

- **Modular Architecture** – Easily extendable with pluggable modules.
- **Organized Project Structure:** Follows a pattern similar to the popular Django framework for ease of learning and adoption.
- **Powerful Command-Line Interface (CLI):** A wide range of commands to manage your project, apps, databases, users, and more via ``manage.py``.
- **Flexible Configuration System:** Load settings from ``settings.py``, ``config.json``, and environment variables (``.env``).
- **Advanced Routing System:** Define clean and dynamic URL patterns with support for path variables and including other URL files.
- **Middleware Management:** A robust structure for processing requests and responses before and after they reach the View, with support for Dependency Injection for middlewares.
- **Strong ORM Integration:** Full support for SQLAlchemy to efficiently manage data models and interact with databases.
- **Database Migrations System:** Utilize Alembic to manage database schema changes automatically and in an organized manner.
- **Authentication & Authorization:** Built-in support for Session-based and JSON Web Tokens (JWT) authentication, plus a flexible permissions system.
- **Efficient Templating System:** Uses the Jinja2 templating engine to render dynamic and reusable HTML interfaces.
- **Error Handling:** Catch errors and generate appropriate responses, with a built-in system for displaying detailed error reports in the browser during development.
- **Security Features:** Tools to protect against common vulnerabilities like CSRF, CORS, SQL Injection, and XSS, along with Rate Limiting and Security Headers.
- **Built-in Admin Panel:** A ready-to-use administrative system with a Dashboard and user management.
- **API Tools:** Helper tools for building Application Programming Interfaces (APIs), including data serialization.
- **forms**: Provides tools for creating and validating HTML forms.
- **Static Files:** Efficiently serves static assets like CSS, JavaScript, and images.
- **Media Files:** Manages user-uploaded media files
- **Signals System:** Allows decoupled applications to get notified when actions occur elsewhere in the framework.
- **Utilities** – Includes helper functions for sessions, users, emails, etc.
- **WSGI Support:** Ready for deployment on production WSGI servers.
- **Integrated Testing:** Support for Pytest to write and run application tests.
- **Other Development Tools:** built-in Logging and Debugging tools.
- **Debugging Tools** – Built-in tools for debugging and performance monitoring.
- **Tailwind CSS Integration** – Optional frontend styling with Tailwind CSS.
- **Documentation** – Comprehensive API documentation and developer guides.

Getting Started
---------------

To get started, explore the following sections:

.. toctree::
   :maxdepth: 2
   :caption: Contents:

   installation
   usage
   features/Admin Panel.rst
   features/routing_system.rst
   features/Models & Database.rst
   features/Views & Responses.rst
   features/Templating System.rst
   features/Static Files.rst
   features/Media Files.rst
   features/file-uploads.rst
   features/Forms.rst
   features/API Tools.rst
   features/Authorization.rst
   features/Authentication.rst
   features/Signal System.rst
   features/sessions.rst
   features/Security Features.rst
   features/Middleware System.rst
   features/logging_config.rst
   features/email-sender.rst
   features/Database Migrations System.rst
   features/custom_middlewares.rst
   features/Configuration System.rst
   features/validation_utilities.rst
   features/error_handling.rst
   features/Error Handling & Reporting.rst
   features/Deployment.rst
   signals/wsgi-application.rst
   signals/user-repository.rst
   signals/user-model.rst
   signals/user-manager.rst
   signals/template-renderer.rst
   signals/session-manager.rst
   signals/role-repository.rst
   signals/permission-repository.rst
   signals/migration_commands.rst
   signals/middleware-manager.rst
   signals/error-handler.rst
   signals/auth.rst
   signals/api-signals.rst
   signals/admin-user.rst
   signals/admin-user-repository.rst
   signals/admin-user-manager.rst
   signals/admin-registry-signals.rst
   modules
   API Reference
   lback/lback
   Contact


About
-----

The lback documentation is maintained and authored by Ibrahem Abo Kila, providing developers with detailed guidance and references for building with the framework.


**Author:** Ibrahem Abo Kila

**Email:** ibrahemabokila@gmail.com

**GitHub:** https://github.com/hemaabokila/lback_framework

**LinkedIn:** https://www.linkedin.com/in/ibrahem-abo-kila/

**YouTube:** https://www.youtube.com/@cryptodome22
